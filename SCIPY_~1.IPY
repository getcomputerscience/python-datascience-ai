{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "M_bzmiNcyDLr"
   },
   "source": [
    "mhmeducations.com"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "DO8l5dvux_Jo"
   },
   "outputs": [],
   "source": [
    "import scipy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "bgEC9sVAwyrg",
    "outputId": "12a8eca1-a761-4e5e-ab26-97015d686b95"
   },
   "outputs": [],
   "source": [
    "from scipy.special import cbrt\n",
    "cb = cbrt(27)\n",
    "print(cb)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "aB55YjSyyI-c",
    "outputId": "3ab9c474-4cae-4d46-e979-f7c7710486d4"
   },
   "outputs": [],
   "source": [
    "from scipy.special import exp10\n",
    "exp = exp10(2)\n",
    "print(exp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 70
    },
    "colab_type": "code",
    "id": "8aZ9N52LyORp",
    "outputId": "5ef76082-6e1d-4bd8-f8a7-cc29af8cf8da"
   },
   "outputs": [],
   "source": [
    "from scipy import linalg\n",
    "import numpy as np\n",
    "two_d_array = np.array([ [4,5], [3,2] ])\n",
    "deter= linalg.det( two_d_array )\n",
    "inv= scipy.linalg.inv(two_d_array)\n",
    "eg_val, eg_vect = linalg.eig(two_d_array)\n",
    "print(eg_val)\n",
    "print(eg_vect)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "8jlyRyXayUXo",
    "outputId": "73f1673f-267b-43a6-ee53-142810528eaf"
   },
   "outputs": [],
   "source": [
    "from scipy import integrate\n",
    "# take f(x) function as f\n",
    "f = lambda x : x**2\n",
    "#single integration with a = 0 & b = 1  \n",
    "integration = integrate.quad(f, 0 , 1)\n",
    "print(integration)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "colab": {
   "name": "scipy_operation.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
