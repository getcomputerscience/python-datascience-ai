{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\", category=DeprecationWarning)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Students': ['Sachin', 'sakshi', 'ayyan', 'ryan'],\n",
       " 'Course': ['Bsc.IT', 'Bsc.IT', 'Bsc.IT', 'Bsc.IT'],\n",
       " 'Rollno': [124, 128, 156, 132]}"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dict = {'Students':[\"Sachin\", \"sakshi\", \"ayyan\", \"ryan\"],\n",
    "        'Course': [\"Bsc.IT\", \"Bsc.IT\", \"Bsc.IT\", \"Bsc.IT\"],\n",
    "        'Rollno':[124, 128, 156, 132]}\n",
    "dict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      Students  Course  Rollno\n",
      "False   Sachin  Bsc.IT     124\n",
      "True    sakshi  Bsc.IT     128\n",
      "True     ayyan  Bsc.IT     156\n",
      "False     ryan  Bsc.IT     132\n"
     ]
    }
   ],
   "source": [
    "# We are accessing a DataFrame with a boolean index\n",
    "daf = pd.DataFrame(dict, index = [False, True, True, False])\n",
    "print(daf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      Students  Course  Rollno\n",
      "False   Sachin  Bsc.IT     124\n",
      "False     ryan  Bsc.IT     132\n"
     ]
    }
   ],
   "source": [
    "# We are accessing a dataframe with a boolean index\n",
    "daf = pd.DataFrame(dict, index = [False, True, True, False])\n",
    "# We are accessing a dataframe using .loc[]\n",
    "print(daf.loc[False])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Students    Sachin\n",
      "Course      Bsc.IT\n",
      "Rollno         124\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "# We are accessing a dataframe with a boolean index\n",
    "daf = pd.DataFrame(dict, index = [False, True, True, False])\n",
    "# We are accessing a dataframe using .iloc[]\n",
    "print(daf.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  Students  Course  Rollno\n",
      "2   sakshi  Bsc.IT     128\n",
      "3    ayyan  Bsc.IT     156\n"
     ]
    }
   ],
   "source": [
    "daf = pd.DataFrame(dict, index = [0, 2, 3, 1])\n",
    "print(daf[[False, True, True, False]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    False\n",
      "1     True\n",
      "2    False\n",
      "3    False\n",
      "Name: Rollno, dtype: bool\n"
     ]
    }
   ],
   "source": [
    "# We are accessing a dataframe with a boolean index\n",
    "daf = pd.DataFrame(dict)\n",
    "# We are using comparison operator for filtering the data\n",
    "print(daf['Rollno'] == 128)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  Students  Course  Rollno\n",
      "2    ayyan  Bsc.IT     156\n"
     ]
    }
   ],
   "source": [
    "# We are masking data based on index value\n",
    "daf = pd.DataFrame(dict, index = [0, 1, 2,3])\n",
    "mask = daf.index == 2\n",
    "print(daf[mask])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
